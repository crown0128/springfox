testcases:
  - parentUri: "/api-docs/business-service"
    index: 0
    testDescription: "Verfied when @PathVariable is aliased"
    expectedUri: "/businesses/aliased/{otherId}"
    returnType: "string"
    parameters:
      - type: "string"
        paramType: "path"
        name: "otherId"

  - parentUri: "/api-docs/business-service"
    index: 1
    testDescription: "Verfied when @PathVariable is not aliased"
    expectedUri: "/businesses/non-aliased/{businessId}"
    returnType: "string"
    parameters:
      - type: "string"
        paramType: "path"
        name: "businessId"

  - parentUri: "/api-docs/business-service"
    index: 2
    testDescription: "Verfied when @PathVariable is defaulted"
    expectedUri: "/businesses/vanilla/{businessId}"
    returnType: "string"
    parameters:
      - type: "string"
        paramType: "path"
        name: "businessId"

  - parentUri: "/api-docs/business-service"
    index: 3
    testDescription: "Verfied when Response entity has a base type"
    expectedUri: "/businesses/responseEntity/{businessId}"
    returnType: "ResponseEntity«string»"
    parameters:
      - type: "string"
        paramType: "path"
        name: "businessId"

  - parentUri: "/api-docs/controller-with-no-request-mapping-service"
    index: 0
    testDescription: "Verified when controller has no request mapping at the class level and ignores
    UriComponentsBuilder"
    expectedUri: "/no-request-mapping"
    returnType: "ResponseEntity«Example»"

  - parentUri: "/api-docs/fancypets"
    index: 0
    testDescription: "Verified new method on inherited generic type"
    expectedUri: "/fancypets/?{someId}"
    returnType: "int"
    parameters:
      - type: "FancyPet"
        name: "object"
      - type: "integer"
        name: "someId"

  - parentUri: "/api-docs/fancypets"
    index: 1
    testDescription: "Verified Inheritted class with a generic type"
    expectedUri: "/fancypets"
    returnType: ""
    httpMethod: "PUT"
    parameters:
       - type: Pet
         name: "pet"

  - parentUri: "/api-docs/fancypets"
    index: 2
    testDescription: "Verified Inherrited override of a parameterized generic type"
    expectedUri: "/fancypets"
    returnType: "int"
    httpMethod: "POST"
    parameters:
       - type: "FancyPet"
         name: "object"

#DK TODO: Alternate type
  - parentUri: "/api-docs/features"
    index: 0
    testDescription: "Verified alternate type for big decimal"
    expectedUri: "/features/bigDecimal"
    returnType: ""
    parameters:
       - type: "number"
         name: "input"

#DK TODO: Alternate type
  - parentUri: "/api-docs/features"
    index: 1
    testDescription: "Verified alternate type for LocalDate"
    expectedUri: "/features/date"
    returnType: ""
    parameters:
       - type: "LocalDate"
         name: "localDate"

  - parentUri: "/api-docs/features"
    index: 2
    testDescription: "Verified swagger annotations are processed correctly"
    expectedUri: "/features/{petId}"
    returnType: "Pet"
    parameters:
       - type: "string"
         name: "petId"

  - parentUri: "/api-docs/features"
    index: 3
    testDescription: "Verified that all http methods are generated when method is not explicitly mentioned"
    expectedUri: "/features/allMethodsAllowed"
    returnType: ""

  - parentUri: "/api-docs/features"
    index: 4
    httpMethod: "GET"
    testDescription: "Verified ignore type rule for UriComponentsBuilder"
    expectedUri: "/features/effective"
    returnType: "ResponseEntity«Example»"

  - parentUri: "/api-docs/features"
    index: 5
    testDescription: "Verifed that nested generics are supported"
    expectedUri: "/features/effectives"
    returnType: "ResponseEntity«List«Example»»"

  - parentUri: "/api-docs/features"
    index: 6
    httpMethod: "POST"
    testDescription: "Verified that bare models without @RequestBody annotation are supported"
    expectedUri: "/features/bare"
    returnType: ""
    parameters:
      - type: "Example"
        name: "example"

  - parentUri: "/api-docs/features"
    index: 7
    testDescription: "Verified enums are supported"
    expectedUri: "/features/status"
    returnType: ""
    parameters:
       - type: "string"
         name: "enumType"

  - parentUri: "/api-docs/features"
    index: 8
    testDescription: "Verfied generic collection of enums are supported"
    expectedUri: "/features/statuses"
    returnType: ""
    parameters:
       - type: "Collection«string»"
         name: "enumType"

  - parentUri: "/api-docs/child"
    index: 0
    testDescription: "Verified that urls are calculated correctly when class and method have request mapping urls"
    expectedUri: "/child/child-method"
    returnType: "string"
    parameters:
       - type: "string"
         name: "parameter"

  - parentUri: "/api-docs/petgrooming"
    index: 0
    testDescription: "Verified that multiple request mappings on controller works"
    expectedUri: "/petgrooming"
    returnType: "ResponseEntity«boolean»"
    parameters:
       - type: "string"
         name: "type"

  - parentUri: "/api-docs/petgrooming"
    index: 1
    testDescription: "Verified that multiple request mappings on controller works and @RequestStatus is honored"
    expectedUri: "/petgrooming/voidMethod/{input}"
    returnType: ""
    parameters:
       - type: "string"
         name: "input"

#  - parentUri: "/api-docs/pets/grooming"
#    index: 0
#    testDescription: "Verified that multiple request mappings on controller works and is grouped correctly"
#    expectedUri: "/pets/grooming"
#    returnType: "ResponseEntity«boolean»"
#    parameters:
#       - type: "string"
#         name: "type"
#
#  - parentUri: "/api-docs/pets/grooming"
#    index: 1
#    testDescription: "Verified that multiple request mappings on controller works and @RequestStatus is honored"
#    expectedUri: "/pets/grooming/voidMethod/{input}"
#    returnType: ""
#    parameters:
#       - type: "string"
#         name: "input"
#
  - parentUri: "/api-docs/pets"
    index: 0
    testDescription: "Verified that multiple request mappings on controller works and is grouped correctly"
    expectedUri: "/pets/grooming"
    returnType: "ResponseEntity«boolean»"
    parameters:
       - type: "string"
         name: "type"

  - parentUri: "/api-docs/pets"
    index: 1
    httpMethod: "GET"
    testDescription: "Verified that multiple request mappings on controller works and is grouped correctly"
    expectedUri: "/pets"
    returnType: "ResponseEntity«boolean»"
    parameters:
       - type: "string"
         name: "type"

  - parentUri: "/api-docs/pets"
    index: 2
    testDescription: "Verified that multiple request mappings on controller works and @RequestStatus is honored"
    expectedUri: "/pets/grooming/voidMethod/{input}"
    returnType: ""
    parameters:
       - type: "string"
         name: "input"

  - parentUri: "/api-docs/pets"
    index: 3
    testDescription: "Verified that multiple request mappings on controller works and @RequestStatus is honored"
    expectedUri: "/pets/voidMethod/{input}"
    returnType: ""
    parameters:
       - type: "string"
         name: "input"

  - parentUri: "/api-docs/pets"
    index: 4
    testDescription: "Verified multiple @PathVariables is supported"
    expectedUri: "/pets/{a}/{b}"
    returnType: "ResponseEntity«Void»"
    parameters:
       - type: "string"
         name: "a"
       - type: "string"
         name: "b"

  - parentUri: "/api-docs/pets"
    index: 5
    httpMethod: "POST"
    testDescription: "Verfied @Apixxx annotations are supported and layer on top of spings annotations for POST"
    expectedUri: "/pets"
    returnType: ""
    parameters:
       - type: "Pet"
         name: "pet"

  - parentUri: "/api-docs/pets"
    index: 6
    testDescription: "Verfied @Apixxx annotations are supported and layer on top of spings annotations for GET"
    expectedUri: "/pets/{petId}"
    returnType: "Pet"
    parameters:
       - type: "string"
         name: "petId"

  - parentUri: "/api-docs/pets"
    index: 7
    httpMethod: "PUT"
    testDescription: "Verfied @Apixxx annotations are supported and layer on top of spings annotations for POST"
    expectedUri: "/pets"
    returnType: ""
    parameters:
       - type: "Pet"
         name: "pet"

  - parentUri: "/api-docs/pets"
    index: 8
    testDescription: "Verfied @RequestParam is supported"
    expectedUri: "/pets/findByStatus"
    returnType: "Pet"
    parameters:
       - type: "string"
         name: "status"

  - parentUri: "/api-docs/pets"
    index: 9
    testDescription: "Verified @Depricated operations are supported"
    expectedUri: "/pets/findByTags"
    returnType: "Pet"
    parameters:
       - type: "string"
         name: "tags"

  - parentUri: "/api-docs/pets"
    index: 10
    testDescription: "@Verified @ApiModel annotation is supported"
    expectedUri: "/pets/siblings"
    returnType: "List[Pet]"
    parameters:
       - type: "Pet"
         name: "pet"

  - parentUri: "/api-docs/pets"
    index: 11
    httpMethod: "GET"
    testDescription: "Verified Generic List is supported"
    expectedUri: "/pets"
    returnType: "List[Pet]"

  - parentUri: "/api-docs/pets"
    index: 12
    testDescription: "Verfied HttpEntity is supported"
    expectedUri: "/pets/{name}"
    returnType: "HttpEntity«Pet»"
    parameters:
       - type: "string"
         name: "name"

  - parentUri: "/api-docs/pets"
    index: 13
    testDescription: "Verified concrete Map<string, Pet> is supported"
    expectedUri: "/pets/echo"
    returnType: "List[Entry«string,Pet»]"
    parameters:
       - type: "List[Entry«string,Pet»]"
         name: "someInput"

  - parentUri: "/api-docs/pets"
    index: 14
    testDescription: "Verfied generic Map<string, Object> maps to any"
    expectedUri: "/pets/transformPetNameToPetMapToAny"
    returnType: "object"
    parameters:
       - type: "List[Entry«string,Pet»]"
         name: "someInput"

  - parentUri: "/api-docs/pets"
    index: 15
    testDescription: "Verfied generic Map<Object,Object> is supported"
    expectedUri: "/pets/transformPetNameToPetMapToGenericOpenMap"
    returnType: "object"
    parameters:
       - type: "List[Entry«string,Pet»]"
         name: "someInput"

  - parentUri: "/api-docs/pets"
    index: 16
    testDescription: "Verified non-generic Map is supported"
    expectedUri: "/pets/transformPetNameToPetMapToOpenMap"
    returnType: "object"
    parameters:
       - type: "List[Entry«string,Pet»]"
         name: "someInput"

  - parentUri: "/api-docs/pets"
    index: 17
    testDescription: "Verified nested generic keys and values are supported for Maps"
    expectedUri: "/pets/nameToNickNamesMap"
    returnType: "List[Entry«string,List«string»»]"

  - parentUri: "/api-docs/pets"
    index: 18
    testDescription: "Verified List of HttpEntity is supported"
    expectedUri: "/pets/byName/{name}"
    returnType: "HttpEntity«List«Pet»»"
    parameters:
       - type: "string"
         name: "name"

  - parentUri: "/api-docs/pets"
    index: 19
    testDescription: "Verified Void ResponseEntity is supported"
    expectedUri: "/pets/{petId}/pic"
    returnType: "ResponseEntity«Void»"
    parameters:
       - type: "string"
         name: "petId"
       - type: "file"
         name: "pic"

  - parentUri: "/api-docs/pets"
    index: 20
    testDescription: "Verified naked @PathVariables with no explicit names are supported"
    expectedUri: "/pets/{petId}/pic/{picId}"
    returnType: "ResponseEntity«Void»"
    parameters:
       - type: "string"
         name: "petId"
       - type: "string"
         name: "picId"