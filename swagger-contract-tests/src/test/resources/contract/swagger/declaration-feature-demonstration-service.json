{
  "apiVersion": "1.0",
  "apis": [
    {
      "description": "all",
      "operations": [
        {
          "method": "GET",
          "summary": "all",
          "nickname": "allUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "HEAD",
          "summary": "all",
          "nickname": "allUsingHEAD",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "POST",
          "summary": "all",
          "nickname": "allUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "PUT",
          "summary": "all",
          "nickname": "allUsingPUT",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "PATCH",
          "summary": "all",
          "nickname": "allUsingPATCH",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "DELETE",
          "summary": "all",
          "nickname": "allUsingDELETE",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "OPTIONS",
          "summary": "all",
          "nickname": "allUsingOPTIONS",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "string"
        },
        {
          "method": "TRACE",
          "summary": "all",
          "nickname": "allUsingTRACE",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "string"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "string"
        }
      ],
      "path": "/features"
    },
    {
      "description": "addFiles",
      "operations": [
        {
          "method": "POST",
          "summary": "Add a new contact with file attachment",
          "nickname": "addFilesUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": true,
              "description": "files",
              "name": "files",
              "paramType": "form",
              "items": {
                "type": "File"
              },
              "type": "array",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/addFiles"
    },
    {
      "description": "allMethodAllowed",
      "operations": [
        {
          "method": "GET",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "HEAD",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingHEAD",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "POST",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "PUT",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingPUT",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "PATCH",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingPATCH",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "DELETE",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingDELETE",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "OPTIONS",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingOPTIONS",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "void"
        },
        {
          "method": "TRACE",
          "summary": "allMethodAllowed",
          "nickname": "allMethodAllowedUsingTRACE",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 204,
              "message": "No Content"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/allMethodsAllowed"
    },
    {
      "description": "getBare",
      "operations": [
        {
          "method": "POST",
          "summary": "getBare",
          "nickname": "getBareUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "description": "example",
              "name": "body",
              "paramType": "body",
              "type": "Example",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/bare"
    },
    {
      "description": "updateBigDecimal",
      "operations": [
        {
          "method": "POST",
          "summary": "updateBigDecimal",
          "nickname": "updateBigDecimalUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "description": "input",
              "name": "body",
              "paramType": "body",
              "format": "double",
              "type": "number",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/bigDecimal"
    },
    {
      "description": "updateBoolean",
      "operations": [
        {
          "method": "POST",
          "summary": "updateBoolean",
          "nickname": "updateBooleanUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "description": "input",
              "name": "body",
              "paramType": "body",
              "type": "boolean",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/boolean"
    },
    {
      "description": "updateDate",
      "operations": [
        {
          "method": "POST",
          "summary": "updateDate",
          "nickname": "updateDateUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "description": "localDate",
              "name": "body",
              "paramType": "body",
              "type": "LocalDate",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/date"
    },
    {
      "description": "getEffective",
      "operations": [
        {
          "method": "GET",
          "summary": "getEffective",
          "nickname": "getEffectiveUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "Example"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "Example"
        }
      ],
      "path": "/features/effective"
    },
    {
      "description": "getEffectives",
      "operations": [
        {
          "method": "GET",
          "summary": "getEffectives",
          "nickname": "getEffectivesUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "items": {
            "type": "Example"
          },
          "type": "array"
        }
      ],
      "path": "/features/effectives"
    },
    {
      "description": "listOfMaps",
      "operations": [
        {
          "method": "GET",
          "summary": "listOfMaps",
          "nickname": "listOfMapsUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "List[Map\u00abstring,string\u00bb]"
        }
      ],
      "path": "/features/listOfMaps"
    },
    {
      "description": "mapOfMapOfExample",
      "operations": [
        {
          "method": "GET",
          "summary": "mapOfMapOfExample",
          "nickname": "mapOfMapOfExampleUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "List[Entry\u00abstring,Map\u00abstring,Example\u00bb\u00bb]"
        }
      ],
      "path": "/features/mapOfMapOfExample"
    },
    {
      "description": "modelWithMapProperty",
      "operations": [
        {
          "method": "GET",
          "summary": "modelWithMapProperty",
          "nickname": "modelWithMapPropertyUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "ModelWithMapProperty"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "ModelWithMapProperty"
        }
      ],
      "path": "/features/mapProperty"
    },
    {
      "description": "getModelAttribute",
      "operations": [
        {
          "method": "GET",
          "summary": "getModelAttribute",
          "nickname": "getModelAttributeUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "name": "complexProp.name",
              "paramType": "query",
              "type": "string",
              "required": false
            },
            {
              "allowMultiple": false,
              "name": "stringProp",
              "paramType": "query",
              "type": "string",
              "required": false
            },
            {
              "allowMultiple": false,
              "name": "intProp",
              "paramType": "query",
              "format": "int32",
              "type": "integer",
              "required": false
            },
            {
              "allowMultiple": true,
              "name": "listProp",
              "paramType": "query",
              "items": {
                "type": "string"
              },
              "type": "array",
              "required": false
            },
            {
              "allowMultiple": true,
              "name": "arrayProp",
              "paramType": "query",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/modelAttributes"
    },
    {
      "description": "propertyWithObjectNode",
      "operations": [
        {
          "method": "POST",
          "summary": "propertyWithObjectNode",
          "nickname": "propertyWithObjectNodeUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "description": "model",
              "name": "body",
              "paramType": "body",
              "type": "ModelWithObjectNode",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/propertyWithObjectNode"
    },
    {
      "description": "updateBaz",
      "operations": [
        {
          "method": "POST",
          "summary": "updateBaz",
          "nickname": "updateBazUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "enum": [
                "ONE",
                "TWO"
              ],
              "description": "enumType",
              "name": "body",
              "paramType": "body",
              "type": "string",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/status"
    },
    {
      "description": "updateBazes",
      "operations": [
        {
          "method": "POST",
          "summary": "updateBazes",
          "nickname": "updateBazesUsingPOST",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": true,
              "description": "enumType",
              "name": "body",
              "paramType": "body",
              "type": "Collection\u00abstring\u00bb",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 201,
              "message": "Created"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "void"
        }
      ],
      "path": "/features/statuses"
    },
    {
      "description": "getPetById",
      "operations": [
        {
          "method": "GET",
          "summary": "Find pet by ID",
          "notes": "Returns a pet when ID < 10. ID > 10 or nonintegers will simulate API error conditions",
          "nickname": "getPetByIdUsingGET",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "maximum": "5",
              "minimum": "1",
              "description": "ID of pet that needs to be fetched",
              "name": "petId",
              "paramType": "path",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "Pet"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "Pet"
        }
      ],
      "path": "/features/{petId}"
    }
  ],
  "basePath": "/",
  "consumes": [

  ],
  "models": {
    "LocalDateTime": {
      "description": "",
      "id": "LocalDateTime",
      "properties": {
        "centuryOfEra": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "chronology": {
          "required": false,
          "type": "Chronology"
        },
        "dayOfMonth": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "dayOfWeek": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "dayOfYear": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "era": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "fieldTypes": {
          "required": false,
          "items": {
            "type": "DateTimeFieldType"
          },
          "type": "array"
        },
        "fields": {
          "required": false,
          "items": {
            "type": "DateTimeField"
          },
          "type": "array"
        },
        "hourOfDay": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "millisOfDay": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "millisOfSecond": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "minuteOfHour": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "monthOfYear": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "secondOfMinute": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "values": {
          "required": false,
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "weekOfWeekyear": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "weekyear": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "yearOfCentury": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "yearOfEra": {
          "required": false,
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Entry\u00abstring,Map\u00abstring,Example\u00bb\u00bb": {
      "description": "",
      "id": "Entry\u00abstring,Map\u00abstring,Example\u00bb\u00bb",
      "properties": {
        "key": {
          "required": false,
          "type": "List[Entry\u00abstring,Example\u00bb]"
        }
      }
    },
    "ModelWithMapProperty": {
      "description": "Describes model with map property",
      "id": "ModelWithMapProperty",
      "properties": {
        "params": {
          "description": "Map of params to be sent",
          "required": false,
          "type": "object"
        }
      }
    },
    "ObjectNode": {
      "description": "",
      "id": "ObjectNode",
      "properties": {

      }
    },
    "Entry\u00abstring,Example\u00bb": {
      "description": "",
      "id": "Entry\u00abstring,Example\u00bb",
      "properties": {
        "key": {
          "required": false,
          "type": "Example"
        }
      }
    },
    "DateTimeField": {
      "description": "",
      "id": "DateTimeField",
      "properties": {
        "durationField": {
          "required": false,
          "type": "DurationField"
        },
        "leapDurationField": {
          "required": false,
          "type": "DurationField"
        },
        "lenient": {
          "required": false,
          "type": "boolean"
        },
        "maximumValue": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "minimumValue": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "required": false,
          "type": "string"
        },
        "rangeDurationField": {
          "required": false,
          "type": "DurationField"
        },
        "supported": {
          "required": false,
          "type": "boolean"
        },
        "type": {
          "required": false,
          "type": "DateTimeFieldType"
        }
      }
    },
    "NestedType": {
      "description": "",
      "id": "NestedType",
      "properties": {
        "name": {
          "required": false,
          "type": "string"
        }
      }
    },
    "DateTimeZone": {
      "description": "",
      "id": "DateTimeZone",
      "properties": {
        "fixed": {
          "required": false,
          "type": "boolean"
        },
        "id": {
          "required": false,
          "type": "string"
        }
      }
    },
    "ModelWithObjectNode": {
      "description": "",
      "id": "ModelWithObjectNode",
      "properties": {
        "anyObject": {
          "required": false,
          "type": "ObjectNode"
        }
      }
    },
    "Example": {
      "description": "",
      "id": "Example",
      "properties": {
        "allCapsSet": {
          "required": false,
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "annotatedEnumType": {
          "enum": [
            "ONE",
            "TWO"
          ],
          "required": false,
          "type": "string"
        },
        "bar": {
          "description": "description of bar",
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "enumType": {
          "enum": [
            "ONE",
            "TWO"
          ],
          "required": false,
          "type": "string"
        },
        "foo": {
          "required": false,
          "type": "string"
        },
        "localDateTime": {
          "required": false,
          "type": "LocalDateTime"
        },
        "nestedType": {
          "required": false,
          "type": "NestedType"
        },
        "parentBeanProperty": {
          "required": false,
          "type": "string"
        },
        "propertyWithNoGetterMethod": {
          "required": false,
          "type": "string"
        },
        "propertyWithNoSetterMethod": {
          "required": false,
          "type": "string"
        },
        "readOnlyString": {
          "description": "A read only string",
          "required": false,
          "type": "string"
        }
      }
    },
    "DurationFieldType": {
      "description": "",
      "id": "DurationFieldType",
      "properties": {
        "name": {
          "required": false,
          "type": "string"
        }
      }
    },
    "DateTimeFieldType": {
      "description": "",
      "id": "DateTimeFieldType",
      "properties": {
        "durationType": {
          "required": false,
          "type": "DurationFieldType"
        },
        "name": {
          "required": false,
          "type": "string"
        },
        "rangeDurationType": {
          "required": false,
          "type": "DurationFieldType"
        }
      }
    },
    "Chronology": {
      "description": "",
      "id": "Chronology",
      "properties": {
        "zone": {
          "required": false,
          "type": "DateTimeZone"
        }
      }
    },
    "DurationField": {
      "description": "",
      "id": "DurationField",
      "properties": {
        "name": {
          "required": false,
          "type": "string"
        },
        "precise": {
          "required": false,
          "type": "boolean"
        },
        "supported": {
          "required": false,
          "type": "boolean"
        },
        "type": {
          "required": false,
          "type": "DurationFieldType"
        },
        "unitMillis": {
          "required": false,
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Pet": {
      "description": "",
      "id": "Pet",
      "properties": {
        "age": {
          "required": false,
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "required": false,
          "type": "string"
        },
        "name": {
          "required": false,
          "type": "string"
        }
      }
    }
  },
  "produces": [

  ],
  "resourcePath": "/features",
  "swaggerVersion": "1.2"
}