{
    "swagger": "2.0",
    "info": {
        "description": "Api Documentation",
        "version": "1.0",
        "title": "Api Documentation",
        "termsOfService": "urn:tos",
        "contact": {
            
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "host": "localhost:__PORT__",
    "basePath": "/",
    "tags": [
        {
            "name": "feature-demonstration-service",
            "description": "Demonstration of features"
        }
    ],
    "produces": [
        "application/json",
        "application/xml"
    ],
    "paths": {
        "/features/1367/{itemId}": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "findById",
                "operationId": "findByIdUsingGET",
                "produces": [
                    "application/vnd.com.fancy-pet+json",
                    "application/vnd.com.pet+json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "itemId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FancyPet"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/1430-body": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "base64EncodedBody",
                "operationId": "base64EncodedBodyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "base64Encoded",
                        "description": "base64Encoded",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/1430-query": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "proper",
                "operationId": "properUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "base64Encoded",
                        "in": "query",
                        "description": "base64Encoded",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/1490/entity/{itemId}": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "serializablePetEntity",
                "operationId": "serializablePetEntityUsingGET",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "itemId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PetWithSerializer"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/1490/{itemId}": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "serializablePet",
                "operationId": "serializablePetUsingGET",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "itemId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PetWithSerializer"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateSerializablePet",
                "operationId": "updateSerializablePetUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "itemId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "pet",
                        "description": "pet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PetWithSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/1570": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "Demo using examples",
                "operationId": "saveUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Validation exception",
                        "examples": {
                            "Example json": "{'invalidField': 'address'}",
                            "Example string": "The first name was invalid"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/2031": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "/2031",
                "operationId": "saveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "contents",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomTypeFor2031"
                        },
                        "x-examples": {
                            "application/json": "{'property': 'test'}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyId",
                        "in": "path",
                        "description": "keyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/addFiles": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "Add a new contact with file attachment",
                "operationId": "addFilesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "required": [
                                "files"
                            ],
                            "properties": {
                                "files": {
                                    "type": "array",
                                    "description": "files",
                                    "items": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/allMethodsAllowed": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingGET",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "head": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingHEAD",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingDELETE",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "options": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingOPTIONS",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/arrayOfArrays": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "arrayOfArrays",
                "operationId": "arrayOfArraysUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "arrayOfEnums",
                        "description": "arrayOfEnums",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "PRODUCT",
                                        "SERVICE"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/bare": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getBare",
                "operationId": "getBareUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "allCapsSet",
                        "in": "query",
                        "description": "description of allCapsSet",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "annotatedEnumType",
                        "in": "query",
                        "description": "description of annotatedEnumType",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ONE",
                            "TWO"
                        ]
                    },
                    {
                        "name": "bar",
                        "in": "query",
                        "description": "description of bar",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 10
                    },
                    {
                        "name": "enumType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ONE",
                            "TWO"
                        ]
                    },
                    {
                        "name": "foo",
                        "in": "query",
                        "description": "description of foo",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "chu",
                            "man"
                        ]
                    },
                    {
                        "name": "localDateTime",
                        "in": "query",
                        "description": "local date time desc dd-MM-yyyy hh:mm:ss",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "nestedType.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parentBeanProperty",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "propertyWithNoSetterMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "readOnlyString",
                        "in": "query",
                        "description": "A read only string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/bigDecimal": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBigDecimal",
                "operationId": "updateBigDecimalUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "input",
                        "in": "query",
                        "description": "input",
                        "required": false,
                        "type": "number",
                        "format": "bigdecimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/boolean": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBoolean",
                "operationId": "updateBooleanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "input",
                        "in": "query",
                        "description": "input",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/date": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateDate",
                "operationId": "updateDateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "localDate",
                        "in": "query",
                        "description": "localDate",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/effective": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getEffective",
                "operationId": "getEffectiveUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Example"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/effectives": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getEffectives",
                "operationId": "getEffectivesUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Example"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/enumObject": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getEnumAsObject",
                "operationId": "getEnumAsObjectUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EnumObjectType"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/examples": {
            "put": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateListOfExamples",
                "operationId": "updateListOfExamplesUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "examples",
                        "in": "query",
                        "description": "examples",
                        "required": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Error-ModelName{namespace='springfox.test.contract.swagger.models', name='Example'}"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/inheritance": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "findVehicles",
                "operationId": "findVehiclesUsingGET",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vehicle"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/integers": {
            "put": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateListOfIntegers",
                "operationId": "updateListOfIntegersUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "integers",
                        "in": "query",
                        "description": "integers",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/listOfMaps": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "listOfMaps",
                "operationId": "listOfMapsUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/mapOfMapOfExample": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "mapOfMapOfExample",
                "operationId": "mapOfMapOfExampleUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/Example"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/mapProperty": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "modelWithMapProperty",
                "operationId": "modelWithMapPropertyUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelWithMapProperty"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/features/modelAttributes": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getModelAttribute",
                "operationId": "getModelAttributeUsingGET",
                "parameters": [
                    {
                        "name": "accountTypes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "BANK",
                                "CASH"
                            ]
                        },
                        "collectionFormat": "csv",
                        "enum": [
                            "BANK",
                            "CASH"
                        ]
                    },
                    {
                        "name": "arrayProp",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "complexProp.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "intProp",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listProp",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "stringProp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/propertyWithArrayOfArrays": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "propertyWithArrayOfArrays",
                "operationId": "propertyWithArrayOfArraysUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "model",
                        "description": "model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModelWithArrayOfArrays"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/propertyWithObjectNode": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "propertyWithObjectNode",
                "operationId": "propertyWithObjectNodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "model",
                        "description": "model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModelWithObjectNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/status": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBaz",
                "operationId": "updateBazUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "enumType",
                        "in": "query",
                        "description": "enumType",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ONE",
                            "TWO"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/statuses": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBazes",
                "operationId": "updateBazesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "enumType",
                        "in": "query",
                        "description": "enumType",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ONE",
                                "TWO"
                            ]
                        },
                        "collectionFormat": "csv",
                        "enum": [
                            "ONE",
                            "TWO"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/features/{petId}": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "Find pet by ID",
                "description": "Returns a pet when ID < 10. ID > 10 or non-integers will simulate API error conditions",
                "operationId": "getPetByIdUsingGET",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true,
                        "type": "string",
                        "maxLength": 5,
                        "minLength": 1,
                        "allowEmptyValue": false,
                        "x-example": "3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                },
                "deprecated": false,
                "x-test1": "value1",
                "x-test2": {
                    "name2": "value2"
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        }
    },
    "definitions": {
        "Car": {
            "title": "Car",
            "allOf": [
                {
                    "$ref": "#/definitions/Vehicle"
                },
                {
                    "type": "object",
                    "properties": {
                        "make": {
                            "type": "string"
                        },
                        "model": {
                            "type": "string"
                        },
                        "seatingCapacity": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "topSpeed": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "title": "Car"
                }
            ]
        },
        "Category": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "title": "Category"
        },
        "CustomTypeFor2031": {
            "type": "object",
            "properties": {
                "property": {
                    "type": "string"
                }
            },
            "title": "CustomTypeFor2031"
        },
        "EnumObjectType": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "EnumObjectType"
        },
        "Example": {
            "type": "object",
            "properties": {
                "allCapsSet": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "annotatedEnumType": {
                    "type": "string",
                    "enum": [
                        "ONE",
                        "TWO"
                    ]
                },
                "bar": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "description": "description of bar"
                },
                "enumType": {
                    "type": "string",
                    "enum": [
                        "ONE",
                        "TWO"
                    ]
                },
                "foo": {
                    "type": "string"
                },
                "localDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "nestedType": {
                    "$ref": "#/definitions/NestedType"
                },
                "parentBeanProperty": {
                    "type": "string"
                },
                "propertyWithNoGetterMethod": {
                    "type": "string"
                },
                "propertyWithNoSetterMethod": {
                    "type": "string"
                },
                "readOnlyString": {
                    "type": "string",
                    "description": "A read only string",
                    "readOnly": true
                }
            },
            "title": "Example"
        },
        "FancyPet": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "format": "int32"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "FancyPet"
        },
        "ModelWithArrayOfArrays": {
            "type": "object",
            "properties": {
                "arrayOfArrayOfInts": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "title": "ModelWithArrayOfArrays"
        },
        "ModelWithMapProperty": {
            "type": "object",
            "properties": {
                "params": {
                    "type": "object",
                    "description": "Map of params to be sent",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "title": "ModelWithMapProperty",
            "description": "Describes model with map property"
        },
        "ModelWithObjectNode": {
            "type": "object",
            "properties": {
                "anyObject": {
                    "$ref": "#/definitions/ObjectNode"
                }
            },
            "title": "ModelWithObjectNode"
        },
        "NestedType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "title": "NestedType"
        },
        "ObjectNode": {
            "type": "object",
            "title": "ObjectNode"
        },
        "Pet": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "Pet"
        },
        "PetWithSerializer": {
            "type": "object",
            "title": "PetWithSerializer"
        },
        "Truck": {
            "title": "Truck",
            "allOf": [
                {
                    "$ref": "#/definitions/Vehicle"
                },
                {
                    "type": "object",
                    "properties": {
                        "make": {
                            "type": "string"
                        },
                        "model": {
                            "type": "string"
                        },
                        "payloadCapacity": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "title": "Truck"
                }
            ]
        },
        "Vehicle": {
            "type": "object",
            "discriminator": "type",
            "properties": {
                "make": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                }
            },
            "title": "Vehicle"
        }
    }
}