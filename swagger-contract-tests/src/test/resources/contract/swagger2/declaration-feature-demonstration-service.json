{
    "swagger": "2.0",
    "info": {
        "description": "Api Documentation",
        "version": "1.0",
        "title": "Api Documentation",
        "termsOfService": "urn:tos",
        "contact": {
            "name": "Contact Email"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "host": "localhost:__PORT__",
    "basePath": "/",
    "tags": [
        {
            "name": "feature-demonstration-service",
            "description": "Demonstration of features"
        }
    ],
    "produces": [
        "application/xml",
        "application/json"
    ],
    "paths": {
        "/features/allMethodsAllowed": {
            "head": {
              "tags": [
                "feature-demonstration-service"
              ],
              "summary": "allMethodAllowed",
              "operationId": "allMethodAllowedUsingHEAD_1",
              "consumes": [
                "application/json"
              ],
              "produces": [
                "*/*"
              ],
              "responses": {
                "200": {
                  "description": "OK"
                }
              }
            },
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingDELETE_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "options": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingOPTIONS_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "allMethodAllowed",
                "operationId": "allMethodAllowedUsingPATCH_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/features/bare": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getBare",
                "operationId": "getBareUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "example",
                        "description": "example",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Example"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/features/bigDecimal": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBigDecimal",
                "operationId": "updateBigDecimalUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "input",
                        "description": "input",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/features/boolean": {
          "post": {
            "tags": [
              "feature-demonstration-service"
            ],
            "summary": "updateBoolean",
            "operationId": "updateBooleanUsingPOST_1",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "*/*"
            ],
            "parameters": [
              {
                "in": "body",
                "name": "input",
                "description": "input",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK"
              }
            }
          }
        },
        "/features/date": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateDate",
                "operationId": "updateDateUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "localDate",
                        "description": "localDate",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LocalDate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/features/effective": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getEffective",
                "operationId": "getEffectiveUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Example"
                        }
                    }
                }
            }
        },
        "/features/effectives": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "getEffectives",
                "operationId": "getEffectivesUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Example"
                            }
                        }
                    }
                }
            }
        },
        "/features/listOfMaps": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "listOfMaps",
                "operationId": "listOfMapsUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Map\u00abstring,string\u00bb"
                            }
                        }
                    }
                }
            }
        },
        "/features/mapOfMapOfExample": {
          "get": {
            "tags": [
              "feature-demonstration-service"
            ],
            "summary": "mapOfMapOfExample",
            "operationId": "mapOfMapOfExampleUsingGET_1",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "*/*"
            ],
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/Map\u00abstring,Example\u00bb"
                  }
                }
              }
            }
          }
        },
        "/features/mapProperty": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "modelWithMapProperty",
                "operationId": "modelWithMapPropertyUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ModelWithMapProperty"
                        }
                    }
                }
            }
        },
        "/features/modelAttributes": {
          "get": {
            "tags": [
              "feature-demonstration-service"
            ],
            "summary": "getModelAttribute",
            "operationId": "getModelAttributeUsingGET_1",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "*/*"
            ],
            "parameters": [
              {
                "name": "complexProp.name",
                "in": "query",
                "required": false,
                "type": "string"
              },
              {
                "name": "stringProp",
                "in": "query",
                "required": false,
                "type": "string"
              },
              {
                "name": "intProp",
                "in": "query",
                "required": false,
                "type": "integer",
                "format": "int32"
              },
              {
                "name": "listProp",
                "in": "query",
                "required": false,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "multi"
              },
              {
                "name": "arrayProp",
                "in": "query",
                "required": false,
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "collectionFormat": "multi"
              }
            ],
            "responses": {
              "200": {
                "description": "OK"
              }
            }
          }
        },
        "/features/status": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBaz",
                "operationId": "updateBazUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "enumType",
                        "description": "enumType",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/features/statuses": {
            "post": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "updateBazes",
                "operationId": "updateBazesUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "enumType",
                        "description": "enumType",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Collection\u00abstring\u00bb"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/features/{petId}": {
            "get": {
                "tags": [
                    "feature-demonstration-service"
                ],
                "summary": "Find pet by ID",
                "description": "Returns a pet when ID < 10. ID > 10 or nonintegers will simulate API error conditions",
                "operationId": "getPetByIdUsingGET_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                },
                "x-test1": "value1",
                "x-test2": {
                    "name2": "value2"
                }
            }
        },
        "/features/addFiles": {
          "post": {
            "tags": [
              "feature-demonstration-service"
            ],
            "summary": "Add a new contact with file attachment",
            "operationId": "addFilesUsingPOST_1",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "*/*"
            ],
            "parameters": [
              {
                "name": "files",
                "in": "formData",
                "description": "files",
                "required": true,
                "type": "array",
                "items": {
                  "type": "file"
                },
                "collectionFormat": "multi"
              }
            ],
            "responses": {
              "200": {
                "description": "OK"
              }
            }
          }
        }
    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "DateTimeField": {
            "properties": {
                "durationField": {
                    "$ref": "#/definitions/DurationField"
                },
                "leapDurationField": {
                    "$ref": "#/definitions/DurationField"
                },
                "lenient": {
                    "type": "boolean"
                },
                "maximumValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "rangeDurationField": {
                    "$ref": "#/definitions/DurationField"
                },
                "supported": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/DateTimeFieldType"
                }
            }
        },
        "Example": {
            "properties": {
                "allCapsSet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "annotatedEnumType": {
                    "type": "string",
                    "enum": [
                        "ONE",
                        "TWO"
                    ]
                },
                "bar": {
                    "type": "integer",
                    "format": "int32",
                    "description": "description of bar"
                },
                "enumType": {
                    "type": "string",
                    "enum": [
                        "ONE",
                        "TWO"
                    ]
                },
                "foo": {
                    "type": "string"
                },
                "localDateTime": {
                    "$ref": "#/definitions/LocalDateTime"
                },
                "nestedType": {
                    "$ref": "#/definitions/NestedType"
                },
                "parentBeanProperty": {
                    "type": "string"
                },
                "propertyWithNoSetterMethod": {
                    "type": "string"
                },
                "propertyWithNoGetterMethod": {
                    "type": "string"
                },
                "readOnlyString": {
                    "type": "string",
                    "description": "A read only string",
                    "readOnly": true
                }
            }
        },
        "DateTimeZone": {
            "properties": {
                "id": {
                  "type": "string"
                },
                "fixed": {
                    "type": "boolean"
                }
            }
        },
        "Pet": {
            "properties": {
                "age": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DurationFieldType": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "LocalDateTime": {
            "properties": {
                "centuryOfEra": {
                    "type": "integer",
                    "format": "int32"
                },
                "chronology": {
                    "$ref": "#/definitions/Chronology"
                },
                "dayOfMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "dayOfWeek": {
                    "type": "integer",
                    "format": "int32"
                },
                "dayOfYear": {
                    "type": "integer",
                    "format": "int32"
                },
                "era": {
                    "type": "integer",
                    "format": "int32"
                },
                "fieldTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DateTimeFieldType"
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DateTimeField"
                    }
                },
                "hourOfDay": {
                    "type": "integer",
                    "format": "int32"
                },
                "millisOfDay": {
                    "type": "integer",
                    "format": "int32"
                },
                "millisOfSecond": {
                    "type": "integer",
                    "format": "int32"
                },
                "minuteOfHour": {
                    "type": "integer",
                    "format": "int32"
                },
                "monthOfYear": {
                    "type": "integer",
                    "format": "int32"
                },
                "secondOfMinute": {
                    "type": "integer",
                    "format": "int32"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "weekOfWeekyear": {
                    "type": "integer",
                    "format": "int32"
                },
                "weekyear": {
                    "type": "integer",
                    "format": "int32"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "yearOfCentury": {
                    "type": "integer",
                    "format": "int32"
                },
                "yearOfEra": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Map\u00abstring,string\u00bb": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "Map\u00abstring,Example\u00bb": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Example"
          }
        },
        "ModelWithMapProperty": {
            "properties": {
                "params": {
                    "type": "object",
                    "description": "Map of params to be sent",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Describes model with map property"
        },
        "NestedType": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "DurationField": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "precise": {
                    "type": "boolean"
                },
                "supported": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/DurationFieldType"
                },
                "unitMillis": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Chronology": {
            "properties": {
                "zone": {
                    "$ref": "#/definitions/DateTimeZone"
                }
            }
        },
        "DateTimeFieldType": {
            "properties": {
                "durationType": {
                    "$ref": "#/definitions/DurationFieldType"
                },
                "name": {
                    "type": "string"
                },
                "rangeDurationType": {
                    "$ref": "#/definitions/DurationFieldType"
                }
            }
        }
    }
}
