apply from: "$rootDir/gradle/dependencies.gradle"

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath "com.github.adrianbk:gradle-jvmsrc-plugin:0.6.1"
    classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0"
    classpath "org._10ne.gradle:rest-gradle-plugin:0.3.1"
  }
}
apply plugin: "org.10ne.rest"

ext{
  apiKey = System.getenv('GIT_HUB_API_KEY')
  version = project(':swagger-springmvc').version
}

subprojects {
  apply plugin: 'groovy'
  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  //Adds provide dependency configuration
  configurations {
    provided
    compile.extendsFrom provided
  }

  group = 'com.mangofactory'
  version = '0.9.0-SNAPSHOT'

  apply plugin: 'com.github.adrianbk.jvmsrc'
  jvmsrc {
    packageName "${group}.swagger"
  }

  jar {
    manifest {
      attributes(
              'Implementation-Title': "${project.name}",
              'Implementation-Version': version.toString(),
              'Created-By': System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')',
              'Built-With': "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
              'Build-Time': "${new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")}",
              'Built-By': System.getProperty('user.name'),
              'Built-On': "${InetAddress.localHost.hostName}/${InetAddress.localHost.hostAddress}"
      )
    }
  }

  apply plugin: 'checkstyle'
  checkstyle {
    configFile = file("$rootDir/config/checkstyle.xml")
  }

  apply plugin: 'maven-publish'
  apply from: "$rootDir/gradle/publishing.gradle"

  apply from: "$rootDir/gradle/coverage.gradle"

  repositories {
    jcenter()
  }

  buildscript {
    repositories {
      jcenter()
    }
  }
}

task triggerDownstreamJobs(type: org._10ne.gradle.rest.RestTask) {
  httpMethod = 'get'
  uri = 'https://api.github.com/repos/adrianbk/swagger-springmvc-demo/contents/gradle/dependencies.gradle'
  contentType = groovyx.net.http.ContentType.JSON
  requestHeaders = ['User-Agent' : 'swagger-springmvc', 'Authorization' : "token ${apiKey}"]

  doLast{
    println serverResponse.data
  }

  //Rethink - use travis
  //Add env var POST /repos/settings/?repository_id={repository.id}
  //Trigger last build (rebuild)
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.0'
}
