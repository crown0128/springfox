ext {
  developerMachines = ['adrianxbk']

  relUsername = project.hasProperty('username') ? project.getProperty('username') : 'admin'
  relPassword = project.hasProperty('password') ? project.getProperty('password') : 'password'

  if (developerMachines.contains(System.getenv('USER'))) {
    artifactRepoBase = 'http://localhost:8081/artifactory'
    repoPrefix = 'libs'
  } else {
    artifactRepoBase = 'http://oss.jfrog.org/artifactory'
    repoPrefix = 'oss'
  }


  releaseRepos = {
    maven {
      name 'jcenter'
      url "${artifactRepoBase}/${repoPrefix}-${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}-local"
      credentials {
        username = "$relUsername"
        password = "$relPassword"
      }
    }

    if (!project.version.endsWith('-SNAPSHOT')) {
      maven {
        name 'bintray'
        url "https://api.bintray.com/maven/swaggerspringmvc/swaggerspringmvc/${project.name}"
        credentials {
          username = relUsername
          password = relPassword
        }
      }
    }
  }

  pomMetaData = {
    licenses {
      license {
        name "The Apache Software License, Version 2.0"
        url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        distribution "repo"
      }
    }
    developers {
      developer {
        id "martypitt@me.com"
        name "Marty Pitt"
        organization "The Mango Factory"
        email "martypitt@me.com"
      }
      developer {
        id "dilipkrish"
        name "Dilip Krishnan"
        organization "The Container Store"
        email "dilipkrish_subscriptions@yahoo.com"
      }
      developer {
        id "adrianbk"
        name "Adrian Kelly"
        organization "DiUS Computing"
        email "adrianbkelly+swagger@gmail.com"
      }
    }
  }

  //Gralde's maven-publish plugin does not yet handles pom generation correctly. Fix expected in 2.1
  swaggerMvcPomConfig = {
    def dependencies = asNode().dependencies
    def allDependencies = dependencies.'*'

    allDependencies.findAll() {
      project.configurations.provided.allDependencies.find { dep ->
        dep.name == it.artifactId.text()
      }
    }.each() {
      it.scope*.value = 'provided'
    }

    Node groovyDep = allDependencies.find { it.artifactId.text() == 'groovy-all' }
    groovyDep.scope*.value = 'test'

    asNode().children().last() + pomMetaData
  }
}


task packageSources(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}
