allprojects {
  apply plugin: "idea"
//  apply plugin: "eclipse"
}

idea {
  project {
    languageLevel = '1.8'
    vcs = 'Git'
    ipr {
      withXml { provider ->
        def node = provider.asNode()

        // Set gradle home
        def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
        gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir.absolutePath])

        // set compiler heap space
        def javacSettings = node.appendNode('component', [name: 'JavacSettings'])
        javacSettings.appendNode('option', [name: 'MAXIMUM_HEAP_SIZE', value: "256"])


        // license header
        def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }
        copyrightManager.@default = "ASL2"
        def aslCopyright = copyrightManager.copyright.find { it.option.find { it.@name == "myName" }?.@value == "ASL2" }
        
        if (aslCopyright == null) {
          copyrightManager.append(new XmlParser().parseText("""
            <copyright>
                <option name="notice" value="&#10;&#10;Copyright \${today.year} the original author or authors.&#10;&#10;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;you may not use this file except in compliance with the License.&#10;You may obtain a copy of the License at&#10;&#10;     http://www.apache.org/licenses/LICENSE-2.0&#10;&#10;Unless required by applicable law or agreed to in writing, software&#10;distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;See the License for the specific language governing permissions and&#10;limitations under the License.&#10;&#10;" />
                <option name="keyword" value="Copyright" />
                <option name="allowReplaceKeyword" value="" />
                <option name="myName" value="ASL2" />
                <option name="myLocal" value="true" />
            </copyright>
            """))
        }

        // Code formatting options
        def codeFormatSettings = new XmlParser().parseText('''
 <component name="ProjectCodeStyleSettingsManager">
    <option name="PER_PROJECT_SETTINGS">
      <value>
        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="0" />
        <option name="WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN" value="true" />
        <option name="JD_P_AT_EMPTY_LINES" value="false" />
        <option name="RIGHT_MARGIN" value="130" />
        <GroovyCodeStyleSettings>
          <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
          <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="0" />
        </GroovyCodeStyleSettings>
        <XML>
          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
        </XML>
        <codeStyleSettings language="Groovy">
          <indentOptions>
            <option name="INDENT_SIZE" value="2" />
            <option name="TAB_SIZE" value="2" />
            <option name="LABEL_INDENT_SIZE" value="2" />
          </indentOptions>
        </codeStyleSettings>
        <codeStyleSettings language="JAVA">
          <option name="ALIGN_MULTILINE_METHOD_BRACKETS" value="true" />
          <option name="WRAP_LONG_LINES" value="true" />
          <indentOptions>
            <option name="INDENT_SIZE" value="2" />
            <option name="TAB_SIZE" value="2" />
          </indentOptions>
        </codeStyleSettings>
        <codeStyleSettings language="JSON">
          <indentOptions>
            <option name="INDENT_SIZE" value="4" />
          </indentOptions>
        </codeStyleSettings>
      </value>
    </option>
    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
  </component>
''')
        node.append(codeFormatSettings)

      }
    }
  }
}
